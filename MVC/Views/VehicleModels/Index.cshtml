@using Microsoft.AspNetCore.Routing
@using X.PagedList.Mvc.Core;

@model X.PagedList.IPagedList<VehicleModelViewModel>

<link href="~/css/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Vehicle Models";
}

<h1>Vehicle Models</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>


@using (Html.BeginForm("Index", "VehicleModels", FormMethod.Get))
{
<p>
    Filter by make: @Html.DropDownList("FilterById", ViewBag.MakesSelectList as SelectList, "Show all", null)
    <input type="hidden" name="PageSize" value="@ViewBag.Paging.PageSize" />
    <input type="submit" value="Filter" />
</p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new RouteValueDictionary {
                       {"SortParameter", ViewBag.Sort.SortParameter == "Name" ? "name_desc" : "Name" },
                       {"FilterById", ViewBag.Filter.FilterById },
                       {"PageSize", ViewBag.Paging.PageSize}
                })
            </th>
            <th>
                @Html.ActionLink("Abrv", "Index", new RouteValueDictionary {
                        {"SortParameter", ViewBag.Sort.SortParameter == "Abrv" ? "abrv_desc" : "Abrv" },
                        {"FilterById", ViewBag.Filter.FilterById },
                        {"PageSize", ViewBag.Paging.PageSize}
                })
            </th>
            <th>
                @Html.ActionLink("Make", "Index", new RouteValueDictionary {
                        {"SortParameter", ViewBag.Sort.SortParameter == "Make" ? "make_desc" : "Make" },
                        {"FilterById", ViewBag.Filter.FilterById },
                        {"PageSize", ViewBag.Paging.PageSize}
                })
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Abrv)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Make)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<hr />
@using (Html.BeginForm("Index", "VehicleModels", FormMethod.Get))
{
<p>
    Page size: <select name="PageSize" asp-items="ViewBag.PageSize"></select>
    <input type="hidden" name="FilterById" value="@ViewBag.Filter.FilterById" />
    <input type="submit" value="Set" />
</p>
}
<div style="text-align:center">
    @Html.PagedListPager(Model, page => Url.Action("Index",
        new RouteValueDictionary {
            {"Page", page},
            {"PageSize", ViewBag.Paging.PageSize},
            {"SortParameter", ViewBag.Sort.SortParameter},
            {"FilterById", ViewBag.Filter.FilterById }
        }), X.PagedList.Mvc.Core.Common.PagedListRenderOptions.ClassicPlusFirstAndLast)

    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
</div>